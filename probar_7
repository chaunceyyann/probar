#!/bin/ksh
####################################################################################
# Program name : Progress bar implementation
# Author : Chauncey Yan
# Revision : 0.7
####################################################################################

####################################################################################
# Var init
####################################################################################
bar="##################################################"
eqbar="==================================================="

####################################################################################
# Function: update_bar
# update the bar by one index
####################################################################################
update_bar(){
	((index=($1)%101/2))
	((eqindex=50-$index))
	printf $1 > lastNum
	printf "\r""\[${bar:0:$index}""${eqbar:0:$eqindex}\]"
	printf "\t$1\% "
}

####################################################################################
# $* for getting all the args
# check if there is help or h
####################################################################################
echo $* | grep -e '-h' | read hp
if [[ -z $* ]];then
	hp='-h'
fi
if [[ -n $hp ]];then
	echo '--$1: Goal presentage.'; 
	echo '--$2: Divider for step increment if specified, 1 by defult.'
	echo '--$3: speed in presentage/second, 50%/second by default.'
else

####################################################################################
# Begaining presentage
# initial i=0
# if last presentage exsists, use it
# Smaller than last presentage then i=0
####################################################################################
i=0
if [[ -f lastNum ]];then
	read i < lastNum
fi
if [[ $i -ge $1 ]];then
	i=0
	rm -rf lastNum
	echo
fi

####################################################################################
# $1 Goal presentage
# $2 divider for steps increment
# s=Stoping presentage
####################################################################################
((s=$1))
if [[ -n $2 ]];then
	((s=($1-$i)/$2+$i))
fi
((s=$s+1))

####################################################################################
# Main
# run the main until it reachs the count
####################################################################################
until [[ $i -eq $s ]];do	
	# sleep time calculator
	deeps=0.02
	if [[ -n $3 ]];then
		echo "scale=3; 1 / $3" | bc | read deeps
	fi
	# do not sleep the on starting presentage
	if [[ -z $sl ]];then
		sl=sl
	else
		sleep $deeps
	fi	
	# update the bar state
	update_bar $i
	((i=$i+1))
done

fi # closing from help checking

